package EmpireAbilities

import Globals
import EmpireGlobals
import BuffObjEditing
import ChannelAbilityPreset
import Assets

function genGrowthAura(int newId, int buffId, string name, string icon, string iconBuff, int growth, int range) returns AbilityDefinition
  new BuffDefinition(buffId, 'BHab')
    ..setName(1, name + " Growth Bonus")
    ..setTooltipNormal(1, name + " Growth Bonus")
    ..setIcon(iconBuff)
    ..setTooltipNormalExtended(1, "This house's population growth is modified by " + growth.toString() + "% due to the nearby " + name + ".")
  return new AbilityDefinitionAuraBrilliancecreep(newId)
    ..setTargetsAllowed(1, "friend,invulnerable,mechanical,structure,vulnerable")
    ..presetAreaofEffect((int lvl) -> range.toReal())
    ..setBuffs(1, buffId.toRawCode())
    ..setTargetAttachments(0)
    ..setArtTarget("")
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(0)
    ..setName(name + " Growth Aura")
    ..setTooltipNormal(1, name + " Growth Aura")
    ..setTooltipNormalExtended(1, 
      "Modifies nearby population growth rate.\n"
      + kStrBlue + "Growth|r: " + growth.toString() + "%\n"
      + kStrBlue + "Range|r: " + range.toString())
    ..setManaRegenerationIncrease(1, 0)
    ..setEditorSuffix("")
    ..setIconNormal(icon)

@compiletime function genAbilties()
  new AbilityDefinitionInventory(kAID_TownHallInventory)
    ..setCanDropItems(1, false)
    ..setCanDropItems(1, false)
    ..setCanUseItems(1, true)
    ..setItemCapacity(1, 5)

  new AbilityDefinitionHarvestLumber(kAID_WorkerHarvest)
    ..setLevels(50)
    ..presetCastRange((int _) -> 116.0)
    ..presetDamagetoTree((int lvl) -> 1 + lvl)
    ..presetLumberCapacity((int lvl) -> 10 + 10*lvl)
    ..presetDurationNormal((int _) -> 2.0)
    ..presetAreaofEffect((int _) -> 900.)
    ..presetTargetsAllowed((int _) -> "tree,alive,dead")
    ..setHotkeyNormal("F")
    ..setHotkeyTurnOff("F")
    ..presetTooltipNormal((int lvl) -> "Harvest Lumber [" + kStrGold +  "F|r] - [" + kStrBlue + "Level " + lvl.toString() + "|r]")
    ..presetTooltipNormalExtended((int lvl) -> "Harvest lumber from trees. Trees have unlimited lumber within them.\n\n" + kStrHint + "Can carry " + I2S(10 + 10*lvl) + " lumber and harvests " + I2S(1 + lvl) + " lumber per hit.")
    ..presetTooltipTurnOff((int lvl) -> "Return Lumber [" + kStrGold +  "F|r]")
    ..presetTooltipTurnOffExtended((int lvl) -> "Return the carried lumber to the nearest drop off.")
  new AbilityDefinitionRepairHuman(kAID_WorkerRepair)
    ..presetCastRange((int lvl) -> 25)
  new AbilityDefinitionRepairHuman(kAID_BotRepair)
    ..presetCastRange((int _) -> 25)
    ..presetRepairTimeRatio((int _) -> 1.0)
    ..presetRepairCostRatio((int _) -> 0.45)
  new ChannelAbilityPreset(kAID_RetireUnit, 1, true)
    ..makeUnitSpell(0, 0)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(3)
    ..setButtonPositionNormalY(2)
    ..setIconNormal(Icons.bTNGoldmine)
    ..setTooltipNormal(1, "Retire")
    ..setTooltipNormalExtended(1, "Retire this unit, killing it but not affecting the happiness of your people.")
    ..setHotkeyNormal("") // NO HOTKEY FOR RETIRE
  new ChannelAbilityPreset(kAID_DemolishBuilding, 1, true)
    ..makeUnitSpell(0, 0)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(3)
    ..setButtonPositionNormalY(2)
    ..setIconNormal(Icons.bTNEarthquake)
    ..setTooltipNormal(1, "Demolish Building")
    ..setTooltipNormalExtended(1, "Destroy this building.")
    ..setHotkeyNormal("") // NO HOTKEY FOR RETIRE
  
  new ChannelAbilityPreset(kAID_DestroyRoad, 1, true)
    ..makeUnitSpell(0, 0)
    ..presetTargetTypes(Targettype.POINT)
    ..presetOption(Option.TARGETIMAGE, true)
    ..setTargetsAllowed(1, "decoration")
    ..setAreaofEffect(1, kRoadRadius)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(1)
    ..setIconNormal(Icons.bTNThunderClap)
    ..setTooltipNormal(1, "Destroy Road [" + kStrGold +"D|r]")
    ..setTooltipNormalExtended(1, "Remove the targeted road.")
    ..setHotkeyNormal("D")
  new ChannelAbilityPreset(kAID_KillTrees, 1, true)
    ..makeUnitSpell(0, 0)
    ..presetTargetTypes(Targettype.POINT)
    ..presetOption(Option.TARGETIMAGE, true)
    ..setTargetsAllowed(1, "tree")
    ..setAreaofEffect(1, kTreeKillRadius)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(2)
    ..setIconNormal(Icons.bTNNatureTouchGrow)
    ..setTooltipNormal(1, "Kill Trees [" + kStrGold +"X|r]")
    ..setTooltipNormalExtended(1, "Kill the targeted trees clearing the area for you to build.")
    ..setHotkeyNormal("X")
  new ChannelAbilityPreset(kAID_GrowTrees, 1, true)
    ..makeUnitSpell(0, 0)
    ..presetTargetTypes(Targettype.POINT)
    ..presetOption(Option.TARGETIMAGE, true)
    ..setTargetsAllowed(1, "tree")
    ..setAreaofEffect(1, kTreeKillRadius)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(2)
    ..setIconNormal(Icons.bTNAcorn1)
    ..setTooltipNormal(1, "Grow Trees [" + kStrGold +"C|r]")
    ..setTooltipNormalExtended(1, "Regrow any dead trees in the targeted area.")
    ..setHotkeyNormal("C")
  new ChannelAbilityPreset(kAID_TaxIncrease, 1, true)
    ..makeUnitSpell(0, 0.25)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(0)
    ..setIconNormal(Icons.bTNCryptFiendUnBurrow)
    ..setTooltipNormal(1, "Increase Taxes [" + kStrGold + "Q|r]")
    ..setTooltipNormalExtended(1, "Increases the tax rate on your population. This will increase your gold income, but may negatively affect your citizen's happiness.")
    ..setHotkeyNormal("Q")
  new ChannelAbilityPreset(kAID_TaxDecrease, 1, true)
    ..makeUnitSpell(0, 0.25)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(1)
    ..setButtonPositionNormalY(0)
    ..setIconNormal(Icons.bTNCryptFiendBurrow)
    ..setTooltipNormal(1, "Decrease Taxes [" + kStrGold + "W|r]")
    ..setTooltipNormalExtended(1, "Decrease the tax rate on your population. This will reduce your gold income, but will make your population happier.")
    ..setHotkeyNormal("W")
  new ChannelAbilityPreset(kAID_RationIncrease, 1, true)
    ..makeUnitSpell(0, 0.25)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(2)
    ..setButtonPositionNormalY(0)
    ..setIconNormal(Icons.bTNCryptFiendUnBurrow)
    ..setTooltipNormal(1, "Increase Rations [" + kStrGold + "E|r]")
    ..setTooltipNormalExtended(1, "Increases the amount of food you feed your population. This will increase the demand for food, but will increase happiness.")
    ..setHotkeyNormal("E")
  new ChannelAbilityPreset(kAID_RationDecrease, 1, true)
    ..makeUnitSpell(0, 0.25)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(3)
    ..setButtonPositionNormalY(0)
    ..setIconNormal(Icons.bTNCryptFiendBurrow)
    ..setTooltipNormal(1, "Decrease Rations [" + kStrGold + "R|r]")
    ..setTooltipNormalExtended(1, "Decrease the amount of food you feed your population. This will reduce the demand for food, but will decrease happiness.\n\n" + kStrHint + "If your food supplies are dropping quickly, try lowering rations, if only temporarily.")
    ..setHotkeyNormal("R")
  new ChannelAbilityPreset(kAID_UselessItemAbility, 1, true)
    ..makeUnitSpell(0, 0)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(0)
    ..setIconNormal(Icons.bTNCryptFiendBurrow)
    ..setTooltipNormal(1, "UselessItemAbility!")
    ..setTooltipNormalExtended(1, "It's useless! Why are you reading this!?")
    ..setHotkeyNormal("")
    ..setItemAbility(true)
  new ChannelAbilityPreset(kAID_GateLower, 1, true)
    ..makeUnitSpell(0, 0.5)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(0)
    ..setIconNormal(Icons.bTNCryptFiendBurrow)
    ..setTooltipNormal(1, "Lower the Gate [" + kStrGold + "Q|r]")
    ..setTooltipNormalExtended(1, "Lowers the gate, allowing units to pass through this area.")
    ..setHotkeyNormal("Q")
  new ChannelAbilityPreset(kAID_GateRaise, 1, true)
    ..makeUnitSpell(0, 0.5)
    ..presetTargetTypes(Targettype.NONE)
    ..setButtonPositionNormalX(0)
    ..setButtonPositionNormalY(0)
    ..setIconNormal(Icons.bTNCryptFiendUnBurrow)
    ..setTooltipNormal(1, "Raise the Gate [" + kStrGold + "Q|r]")
    ..setTooltipNormalExtended(1, "Raises the gate, blocking passage through the gate. \n\n" + kStrHint + "No units or items can be nearby.")
    ..setHotkeyNormal("Q")
  new AbilityDefinitionNeutralRegenhealthonly(kAID_HospitalHealAura_Life)
    ..setTargetsAllowed(1, "ground,air,organic,vuln,invu,friend,neutral")
    ..setAmountofHitPointsRegenerated(1, 0.05)
    ..setPercentage(1, true)
  new AbilityDefinitionNeutralRegenmanaonly(kAID_HospitalHealAura_Mana)
    ..setTargetsAllowed(1, "ground,air,organic,vuln,invu,friend,neutral")
    ..setAmountRegenerated(1, 0.05)
    ..setPercentage(1, true)
  new AbilityDefinitionAuraRegenerationHealingWard(kAID_FireLifeDegenAura)
    ..setTargetsAllowed(1, "ward")
    ..setAmountofHitPointsRegenerated(1, kEventFireHealthDegen)
    ..setPercentage(1, true)
    ..setAreaofEffect(1, 128)
    ..setBuffs(1, kBID_FireBurning.toRawCode())
  new AbilityDefinitionNeutralRegenmanaonly(kAID_FireManaDegenAura)
    ..setTargetsAllowed(1, "ward")
    ..setAmountRegenerated(1, kEventFireManaDegen)
    ..setPercentage(1, true)
    ..setAreaofEffect(1, 128)
  new BuffDefinition(kBID_FireBurning, 'Bfae')
    ..setArtTarget(1, Doodads.townBurningFireEmitter)
    ..setTargetAttachmentPoint0(1, "")
    ..setIcon(Icons.bTNFire)
    ..setTooltipNormal(1, "Fire!")
    ..setTooltipNormalExtended(1, "This structure is burning down! Call the fire department!")



  genGrowthAura(kAID_PopMarket, kBID_PopMarket, "Market", "ReplaceableTextures\\CommandButtons\\PASMarketplace.blp", Icons.bTNMarketPlace, kMarketAuraRate, kMarketAuraRange)
  genGrowthAura(kAID_PopTavern, kBID_PopTavern, "Tavern", "ReplaceableTextures\\CommandButtons\\PASTavern.blp", Icons.bTNTavern, kTavernAuraRate, kTavernAuraRange)
  genGrowthAura(kAID_PopChurch, kBID_PopChurch, "Church", "ReplaceableTextures\\CommandButtons\\PASCrypt.blp", Icons.bTNCrypt, kChurchAuraRate, kChurchAuraRange)
  genGrowthAura(kAID_PopTheatre, kBID_PopTheatre, "Theatre", "ReplaceableTextures\\CommandButtons\\PASAltarOfKings.blp", Icons.bTNAltarOfKings, kTheatreAuraRate, kTheatreAuraRange)
  genGrowthAura(kAID_PopShoppingMall, kBID_PopShoppingMall, "Shopping Mall", "ReplaceableTextures\\CommandButtons\\PASHuntersHall.blp", Icons.bTNHuntersHall, kShoppingMallAuraRate, kShoppingMallAuraRange)
  genGrowthAura(kAID_PopSwimmingPool, kBID_PopSwimmingPool, "Swimming Pool", "ReplaceableTextures\\CommandButtons\\PASSpawningGrounds.blp", Icons.bTNSpawningGrounds, kSwimmingPoolAuraRate, kSwimmingPoolAuraRange)
  genGrowthAura(kAID_PopFireLight, kBID_PopFireLight, "Fire Light", "ReplaceableTextures\\CommandButtons\\PASFire.blp", Icons.bTNFire, kFireLightAuraRate, kFireLightAuraRange)
  genGrowthAura(kAID_PopLaternLight, kBID_PopLaternLight, "Latern Light", "ReplaceableTextures\\CommandButtons\\PASLamp.blp", Icons.bTNLamp, kLaternLightAuraRate, kLaternLightAuraRange)
  genGrowthAura(kAID_PopPowerPlant, kBID_PopPowerPlant, 
    "Power Plant", Icons.pASBTNShadeTrueSight, 
    "ReplaceableTextures\\CommandButtons\\BTNShadeTrueSight.blp", 
    kPowerPlantAuraRate, kPowerPlantAuraRange)
    
  
    